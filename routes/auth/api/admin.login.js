import express from "express";
import {
  validate,
  verify,
  authenticate,
  createJwt,
} from "../../../middlewares/login.auth.js";

const adminLogin = express.Router();

adminLogin.post(
  "/login",
  validate, // Validate request body format
  verify, // Verify user exists in database
  authenticate, // Verify password matches
  createJwt, // Generate JWT token
  async (req, res) => {
    try {
      // Get user details from the auth object (set by verify middleware)
      const user = req.body.auth;

      // Prepare user response object (exclude sensitive data)
      const userResponse = {
        id: user._id,
        email: user.email,
        name: user.name,
        role: user.role,
        company: user.company,
        address: user.address,
        industry: user.industry,
        vat_number: user.vat_number,
        createdAt: user.createdAt,
      };

      // Respond with success
      res.status(200).json({
        success: true,
        message: "Login successful",
        token: req.body.token, // Token generated by createJwt middleware
        user: userResponse,
        expiresIn: process.env.JWT_EXPIRES_IN || "1d", // Token expiration info
      });
    } catch (error) {
      console.error("Login controller error:", error);

      res.status(500).json({
        success: false,
        message: "Internal server error during login",
        error:
          process.env.NODE_ENV === "development" ? error.message : undefined,
      });
    }
  }
);

export default adminLogin;
